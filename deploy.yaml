---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bh-admission-getter-cr
rules:
- apiGroups: ["","user.openshift.io"]
  resources: ["namespaces","projects","users","serviceaccounts"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bh-admission-sa
  namespace: bh-admission
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bh-admission-getter-crb
subjects:
- kind: ServiceAccount
  name: bh-admission-sa
  namespace: bh-admission
roleRef:
  kind: ClusterRole
  name: bh-admission-getter-cr
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: bh-admission
  namespace: bh-admission
  labels:
    name: bh-admission
spec:
  ports:
  - name: webhook
    port: 443
    targetPort: 8080
  selector:
    name: bh-admission
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bh-admission
  namespace: bh-admission
  labels:
    name: bh-admission
spec:
  replicas: 1
  selector:
    matchLabels:
      name: bh-admission
  template:
    metadata:
      name: bh-admission 
      labels:
        name: bh-admission
    spec:
      containers:
        - name: webhook
          image: image-registry.openshift-image-registry.svc:5000/openshift/bh-admission:latest
#          image: docker-registry.default.svc:5000/openshift/bh-admission:latest
#          image: localhost:5000/bh-admission:latest
          imagePullPolicy: Always
          env:
            - name: DEBUG
              value: "true"
          resources:
            limits:
              memory: 1Gi
              cpu: 1Gi
            requests:
              memory: 50Mi
              cpu: 300m
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
            - name: bh-admission-config
              mountPath: /etc/webhook/bh-admission-config
              readOnly: true
          securityContext:
            readOnlyRootFilesystem: true
      serviceAccountName: bh-admission-sa
      volumes:
        - name: webhook-certs
          secret:
            secretName: bh-admission-certs
        - name: bh-admission-config
          configMap:
            name: bh-admission-config
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: bh-admission-mwc
webhooks:
  - name: bh-admission-mwc.cust.local
    clientConfig:
      service:
        name: bh-admission
        namespace: bh-admission
        path: "/"
      caBundle: 
    rules:
      - operations: ["CREATE"]
        apiGroups: ["", "project.openshift.io"]
        apiVersions: ["v1"]
        resources: ["namespaces","projects"]
    failurePolicy: Ignore

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: bh-admission-vwc
webhooks:
  - name: bh-admission-vwc.cust.local
    clientConfig:
      service:
        name: bh-admission
        namespace: bh-admission
        path: "/"
      caBundle: 
    rules:
      - operations: ["CREATE"]
        apiGroups: ["", "user.openshift.io"]
        apiVersions: ["v1"]
        resources: ["users","serviceaccounts"]
    failurePolicy: Ignore