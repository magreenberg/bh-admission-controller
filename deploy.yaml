---
apiVersion: v1
kind: ConfigMap
metadata:
  name: namespace-admission-config
  namespace: namespace-admission
data:
  namespace-admission.properties: |
    external_api_url=https://localhost:8080
    external_api_timeout=10
    requester_key=mycompany.com/requester
    listen_addr=0.0.0.0:8080
---
apiVersion: v1
kind: Service
metadata:
  name: namespace-admission
  namespace: namespace-admission
  labels:
    name: namespace-admission
spec:
  ports:
  - name: webhook
    port: 443
    targetPort: 8080
  selector:
    name: namespace-admission
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: namespace-admission
  namespace: namespace-admission
  labels:
    name: namespace-admission
spec:
  replicas: 1
  selector:
    matchLabels:
      name: namespace-admission
  template:
    metadata:
      name: namespace-admission 
      labels:
        name: namespace-admission
    spec:
      containers:
        - name: webhook
          image: image-registry.openshift-image-registry.svc:5000/openshift/namespace-admission:latest
#          image: docker-registry.default.svc:5000/openshift/namespace-admission:latest
#          image: localhost:5000/namespace-admission:latest
          imagePullPolicy: Always
          env:
            - name: DEBUG
              value: "true"
          resources:
            limits:
              memory: 50Mi
              cpu: 300m
            requests:
              memory: 50Mi
              cpu: 300m
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
            - name: namespace-admission-config
              mountPath: /etc/webhook/namespace-admission-config
              readOnly: true
          securityContext:
            readOnlyRootFilesystem: true
      volumes:
        - name: webhook-certs
          secret:
            secretName: namespace-admission-certs
        - name: namespace-admission-config
          configMap:
            name: namespace-admission-config
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: namespace-admission
webhooks:
  - name: namespace-admission.cust.local
    clientConfig:
      service:
        name: namespace-admission
        namespace: namespace-admission
        path: "/"
      caBundle: 
    rules:
      - operations: ["CREATE"]
        apiGroups: ["", "project.openshift.io"]
        apiVersions: ["v1"]
        resources: ["namespaces","projects"]
    failurePolicy: Ignore
